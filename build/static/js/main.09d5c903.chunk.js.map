{"version":3,"sources":["services/api.js","pages/Login/login.jsx","pages/Scheduling/scheduling.jsx","components/schedules/BottomBar.jsx","components/schedules/Card.jsx","components/schedules/AllCards.jsx","pages/Schedules/schedules.jsx","pages/Rating/rating.jsx","pages/404.jsx","routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","process","headers","Authorization","localStorage","getItem","Login","useState","email","setEmail","password","setPassword","navigate","useNavigate","e","a","preventDefault","post","response","setItem","data","token","alert","className","onSubmit","htmlFor","type","id","placeholder","required","autoFocus","value","onChange","target","Scheduling","useParams","Date","toISOString","split","date","setDate","message","setMessage","option","setOption","employees","setEmployees","employee","setEmployee","topics","setTopics","selTopics","setSelTopics","link","setLink","isAlert","setIsAlert","alertMessage","setAlertMessage","fetchUsers","useCallback","get","users","console","log","fetchTopics","useEffect","fetchScheduling","isValid","length","altMessage","time","type_schedule","hour","state","description","person","_id","name","evt","Form","Control","as","map","t","text","topic","isChecked","checked","selectedTopic","old","index","indexOf","splice","handleTopics","Label","trim","Group","controlId","rows","replace","Alert","variant","Button","size","onClick","BottomBar","class","href","formatDateCustom","arg","day","getDate","toString","dayF","month","getMonth","getFullYear","Card","props","color","AllCards","schedules","schedule","user","Schedules","schedulesData","setSchedules","fetchSchedules","Rating","radioValue","setRadioValue","fetchRating","ButtonGroup","radio","idx","ToggleButton","currentTarget","NotFound","AppRoutes","path","element","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09d5c903.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  headers: {\n    \"Content-type\": \"application/json\",\n    Authorization:\n      localStorage.getItem('token') ? \"Bearer \" + localStorage.getItem('token') : null\n    //\"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTAxOTU2MmE5MTcyNzQ3Y2E0YTg0OCIsIm5hbWUiOiJNb2NrIiwiZW1haWwiOiJtb2NrQGdtYWlsLmNvbSIsImlhdCI6MTYzNjg0OTc4MiwiZXhwIjoxNjM2ODUzMzgyfQ.rDCRaOxsgBheSkEEzWTZ6xhvaxzh-pH6HVVMuG89IAs\",\n  },\n});\n\nexport default api;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport api from '../../services/api';\nimport './login.css'\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    const navigate = useNavigate();\n\n    async function handleLogin(e) {\n\n        e.preventDefault();\n\n        try{\n            const response = await api.post('/login', {email,password})\n            localStorage.setItem('token', response.data.token);\n\n            navigate('/schedules') \n        }catch (err) {\n            alert('Falha no login, tente novamente')\n        }\n    }\n\n    return (\n        <div className=\"container text-center\">\n            <form className=\"form-signin\" onSubmit={handleLogin}>\n                <h2>Ahfeed</h2>\n                <h4>Cerimônias inteligentes</h4>\n                <label htmlFor=\"inputEmail\" className=\"sr-only\">Email</label>\n                <input \n                    type=\"email\" \n                    id=\"inputEmail\" \n                    className=\"form-control my-2\" \n                    placeholder=\"Email\" \n                    required autoFocus \n                    value={email} \n                    onChange={e => setEmail(e.target.value)} \n                />\n                <label htmlFor=\"inputPassword\" className=\"sr-only\">Senha</label>\n                <input \n                    type=\"password\" \n                    id=\"inputPassword\" \n                    className=\"form-control\" \n                    placeholder=\"Senha\" required \n                    value={password} \n                    onChange={e => setPassword(e.target.value)} \n                />\n                <div className=\"checkbox mb-3\">\n                </div>\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Entrar</button>\n                <p className=\"mt-5 mb-3 text-muted\">&copy; Ahfeed-2021</p>\n            </form>\n        </div>\n    ); \n\n}\n\nexport default Login;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport api from \"../../services/api\";\nimport \"./schedule.css\";\n\nconst Scheduling = () => {\n  const { id } = useParams()\n  const [date, setDate] = useState(new Date().toISOString().split(\".\")[0]);\n  const [message, setMessage] = useState(\"\");\n  const [option, setOption] = useState();\n  const [employees, setEmployees] = useState([]);\n  const [employee, setEmployee] = useState();\n  const [topics, setTopics] = useState([]);\n  const [selTopics, setSelTopics] = useState([]);\n  const [link, setLink] = useState(\"\");\n  const [isAlert, setIsAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n\n  const fetchUsers = useCallback(async () => {\n    try {\n      const response = await api.get(\"/users\");\n      const users = response.data.users;\n      setEmployees(users);\n      setEmployee(users[0])\n    } catch (e) {\n      console.log(e);\n    }\n  }, [setEmployees]);\n\n  const fetchTopics = useCallback(async () => {\n    try {\n      const response = await api.get(\"/topics\");\n      setTopics(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [setTopics]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  useEffect(() => {\n    fetchTopics();\n  }, [fetchTopics]);\n\n  const handleTopics = (topic) => {\n    const isChecked = topic.target.checked;\n    const selectedTopic = topic.target.value;\n\n    if (isChecked) {\n      setSelTopics((old) => [...old, selectedTopic]);\n    } else {\n      if (selTopics.length > 0) {\n        const old = [...selTopics];\n        const index = old.indexOf(selectedTopic);\n        old.splice(index, 1);\n        setSelTopics([...old]);\n      }\n    }\n  };\n\n  const fetchScheduling = async () => {\n    const isValid =\n      date && option && employee && selTopics.length > 0 && message;\n    setIsAlert(!isValid);\n\n    if (!isValid) {\n      const altMessage = !date\n        ? \"A data é obrigatória.\"\n        : !option\n        ? \"Selecione uma opção (One on One / Feedback).\"\n        : !employee\n        ? \"Selecione um colaborador.\"\n        : !selTopics || selTopics.length === 0\n        ? \"Selecione ao menos um tópico.\"\n        : !message || message.length === 0\n        ? \"Escreva a mensagem\"\n        : \"\";\n\n      setAlertMessage(altMessage);\n      return;\n    }\n\n    const time = date.split(\"T\")[1];\n    const data = {\n      type_schedule: option,\n      date: date.split(\"T\")[0],\n      hour: time[0] + \":\" + time[1],\n      state: \"pending\",\n      topics: selTopics,\n      description: message,\n      link,\n      person: employee._id,\n    };\n\n    try {\n      setIsAlert(false);\n      const response = await api.post(\"/schedules\", data);\n      if (response.data.message) {\n        setAlertMessage(response.data.message);\n        setIsAlert(true);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className=\"container card mt-3\">\n      <h2 className=\"mt-3 text-center\">Ahfeed</h2>\n      <h4 className=\"text-center\">Cerimônias inteligentes</h4>\n      <div className=\"col mb-3 mt-3\">\n        <input\n          type=\"datetime-local\"\n          id=\"datetime\"\n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n        />\n      </div>\n\n      <div className=\"col mb-3\">\n        <input\n          className=\"me-2\"\n          type=\"radio\"\n          id=\"oneOnOne\"\n          name=\"option\"\n          value=\"oneOnOne\"\n          onChange={(evt) => setOption(evt.target.value)}\n        />\n        <label className=\"me-4\" htmlFor=\"oneByOne\">\n          One on One\n        </label>\n\n        <input\n          className=\"me-2\"\n          type=\"radio\"\n          id=\"feedback\"\n          name=\"option\"\n          value=\"feedback\"\n          onChange={(evt) => setOption(evt.target.value)}\n        />\n        <label htmlFor=\"feedback\">Feedback</label>\n      </div>\n\n      {employees && (\n        <div>\n          <p>Funcionário</p>\n          <Form.Control\n            as=\"select\"\n            onChange={(evt) => setEmployee(evt.target.value)}\n          >\n            {employees.map((e) => (\n              <option key={e._id} value={e._id}>{e.name}</option>\n            ))}\n          </Form.Control>\n        </div>\n      )}\n\n      <div className=\"mb-3\">\n        <p>Topicos</p>\n        {topics &&\n          topics.map((t) => (\n            <span key={t.id}>\n              <input\n                className=\"me-2\"\n                type=\"checkbox\"\n                id={t.id}\n                name={t.id}\n                value={t.text}\n                onChange={(evt) => handleTopics(evt)}\n              />\n              <label className=\"me-4\" htmlFor={t.id}>\n                {t.text}\n              </label>\n            </span>\n          ))}\n      </div>\n\n      <div className=\"mb-3\">\n        <Form.Label>Link da Reunião</Form.Label>\n        <Form.Control\n          type=\"text\"\n          onChange={(evt) => setLink(evt.target.value.trim())}\n        ></Form.Control>\n      </div>\n\n      <div className=\"mb-3\">\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Mensagem</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            onChange={(evt) =>\n              setMessage(evt.target.value.replace(/\\s{2,}/g, \"\"))\n            }\n          />\n        </Form.Group>\n      </div>\n\n      {isAlert && (\n        <Alert className=\"mt-3\" key={\"alertScheduling\"} variant=\"danger\">\n          {/* Preencha todos os campos. */}\n          {alertMessage}\n        </Alert>\n      )}\n\n      <div className=\"mb-3\">\n        <Button\n          size=\"sm\"\n          variant=\"outline-primary\"\n          className=\"me-1\"\n          onClick={fetchScheduling}\n        >\n          Agendar\n        </Button>\n        <Button size=\"sm\" variant=\"outline-danger\" className=\"me-1\">\n          Cancelar\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Scheduling;\n","const BottomBar = () => {\n    return (\n        <div class=\"fixed-bottom mt-3 ml-3\">\n            <div className=\"bg-white d-flex flex-row-reverse p-5 pt-2 pb-2\">\n\n                <div className=\"mb-1\">\n                    <a href=\"/scheduling\" class=\"btn btn-success m-1 mt-1\">\n                        Novo\n                    </a>\n                </div>\n\n            </div>\n        </div>\n    )\n}\nexport default BottomBar;","import \"./Card.css\";\n\nconst formatDateCustom = (arg) => {\n    const date = new Date(arg)\n    const day = date.getDate().toString()\n    const dayF = (day.length == 1) ? '0' + day : day\n    const month = (date.getMonth() + 1).toString()\n    const monthF = (month.length == 1) ? '0' + month : month\n    const yearF = date.getFullYear();\n\n    return dayF + \"/\" + monthF + \"/\" + yearF;\n}\n\nconst stateColor = {\n    pending: \"\",\n    scheduled: \"\",\n    fulfilled: \"\",\n    unfulfilled: \"\",\n    cancelled: \"\"\n}\n// person, date, hour, type, state\nconst Card = (props) => {\n    const color = !props.state ? 'default' : props.state\n\n    return (\n        <div class={`card card-default ${color}`} >\n            <div class=\"card-body\">\n                <h5 class=\"card-text\">{formatDateCustom(props.date) + ' ' + props.hour}</h5>\n                <p class=\"card-title\">{props.type}</p>\n                <a href={\"/scheduling/\" + props.person} class=\"btn btn-primary\">Ver Mais ></a>\n            </div>\n        </div>\n    )\n}\nexport default Card;","import Card from \"./Card\";\n\nconst AllCards = (schedules) => {\n    // console.log(schedules)\n    return (\n        <div className=\"container card mt-3\">\n            <h2 className=\"mt-3 text-center\">Ahfeed</h2>\n            <h4 className=\"text-center\">Cerimônias inteligentes</h4>\n\n            <div class=\"row row-cols-1 row-cols-md-3\">\n \n                    {  !!schedules.schedules\n                        ? schedules.schedules.map((schedule) => {\n                            return <div class=\"col mb-4\">\n                                <Card\n                                    person={schedule.user}\n                                    date={schedule.date}\n                                    hour={schedule.hour}\n                                    state={schedule.state}\n                                    type={schedule.type_schedule}\n                                />\n                            </div>\n\n                        })\n                        : <span>Nenhum Registro encontrado!</span>\n                    }            \n    \n            </div>\n        </div>\n\n    )\n};\nexport default AllCards;","import React, { useState, useEffect, useCallback } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport api from \"../../services/api\";\nimport \"./schedule.css\";\nimport { useNavigate } from 'react-router-dom';\nimport BottomBar from '../../components/schedules/BottomBar';\nimport AllCards from '../../components/schedules/AllCards';\n\n\nconst Schedules = () => {\n    const [schedulesData, setSchedules] = useState();\n\n    const [topics] = useState([\n        { id: 1, text: \"Performance\" },\n        { id: 2, text: \"FeedBack (Líder < -- > Liderado)\" },\n        { id: 3, text: \"Desenvolvimento\" },\n        { id: 4, text: \"Evolução Profissional\" },\n        { id: 5, text: \"Clima e Relacionamento\" },\n        { id: 6, text: \"Pessoal\" },\n    ]);\n    const [topic, setTopic] = useState();\n\n    const fetchSchedules = useCallback(async () => {\n        try {\n            const response = await api.get(\"/schedules\");\n            const schedules = response.data.schedules;\n            setSchedules(schedules);\n        } catch (e) {\n            console.log(e);\n        }\n    }, [setSchedules]);\n\n    \n    useEffect(() => {\n        fetchSchedules();\n    }, [fetchSchedules]);\n\n\n    return (\n        <>\n            <AllCards schedules={schedulesData}/>\n            <BottomBar />\n        </>\n    );\n\n}\n\nexport default Schedules;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport Form from \"react-bootstrap/Form\";\n\nimport api from '../../services/api';\nimport './rating.css'\n\nconst Rating = () => {\n    const [message, setMessage] = useState([]); \n    const [radioValue, setRadioValue] = useState();\n    const navigate = useNavigate();\n\n    const radios = [\n        { name: 'like'},\n        { name: 'dislike'}\n    ];\n    \n    const fetchRating = async () => {\n        alert('message: ' + message + ' radio: ' + radioValue);\n\n        const data = {\n            state: \"finished\",\n            message: message,\n          };\n\n        try {\n            //const response = await api.post(\"/schedules\", data);\n            //if (response.data.message) {\n              \n            //}\n            navigate('/schedules');\n          } catch (e) {\n            console.log(e);\n          }\n    };\n\n    return (\n        <div className=\"container card mt-3\">\n      <h2 className=\"mt-3 text-center\">Ahfeed</h2>\n      <h4 className=\"text-center\">Cerimônias inteligentes</h4>\n      \n      <div className=\"mb-3\">\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Deixe uma mensagem sobre essa cerimônia</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            onChange={(evt) =>\n              setMessage(evt.target.value.replace(/\\s{2,}/g, \"\"))\n            }\n          />\n        </Form.Group>\n      </div>\n\n      <div className=\"mb-3\">\n      <ButtonGroup>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            id={`radio-${idx}`}\n            type=\"radio\"\n            variant={idx % 2 ? 'outline-danger' : 'outline-success'}\n            name=\"radio\"\n            value={radio.name}\n            checked={radioValue === radio.name}\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      </div>\n\n      <div className=\"mb-3\">\n        <Button\n          size=\"sm\"\n          variant=\"outline-primary\"\n          className=\"me-1\"\n          onClick={fetchRating}\n        >\n          Avaliar\n        </Button>\n      </div>\n    </div>\n    );\n};\n\nexport default Rating;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => (\n  <div>\n    <h1>404 - Not Found!</h1>\n    <a href=\"/\">Go Home</a>\n  </div>\n);\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Login from \"./pages/Login/login\";\nimport Scheduling from \"./pages/Scheduling/scheduling\";\nimport Schedules from \"./pages/Schedules/schedules\";\nimport Rating from \"./pages/Rating/rating\"\nimport NotFound from \"./pages/404\";\n\nexport default function AppRoutes() {\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/schedules\" element={<Schedules />} />\n        <Route path=\"/scheduling\" element={<Scheduling />} />\n        <Route path=\"/scheduling/:id\" element={<Scheduling />} />\n        <Route path=\"/rating\" element={<Rating />} />\n        <Route path=\"/rating\" element={<Rating />} />\n        <Route element={<NotFound />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AppRoutes from \"./routes\";\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <AppRoutes /> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}